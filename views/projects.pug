extends layouts/layout.pug

block content
  div(class='row')
    each project in model.projects.sort((a, b) => { if(!a.githubRepo) return 1; if(!b.githubRepo) return -1; let dateA = a.githubRepo.getDetails().created_at; let dateB = b.githubRepo.getDetails().created_at; if(dateA == dateB) { return 0; } else if(dateA < dateB) { return 1; } else { return -1; }})
      - let hasScreenshots = project.screenshots.length > 0
      div(class=`col-12 d-flex col-md-${hasScreenshots ? '12' : '6'} col-lg-${hasScreenshots ? '8' : '4'} bottom-buffer`)
        div(class='card bg-light')
          div(class=`${hasScreenshots ? 'row h-100 no-gutters' : ''}`)
            div(class=`${hasScreenshots ? 'col-md-6' : ''}`)
              div(class='card-body flex-fill')
                h5(class='card-title') #{project.title}
                if project.githubRepo
                  h6(class='card-subtitle mb-2 text-muted') #{'Updated on: ' + project.githubRepo.getDetails().updated_at.substr(0, 10)}
                p
                  each language in project.languages
                    span(class='badge badge-pill badge-primary') #{language}
                  br
                  each framework in project.frameworks
                    span(class='badge badge-pill badge-secondary') #{framework}
                if project.about
                  p(class='card-text') !{project.about.toHTML()}
            if hasScreenshots
              div(class='col-md-6 my-auto')
                - let carouselID = `carousel${project.title.replace(/\W/g, '')}`
                div(id=carouselID, class='carousel slide', data-ride='carousel')
                  ol(class='carousel-indicators')
                    each screenshot, index in project.screenshots
                      li(data-target=`#${carouselID}`, data-slide-to=`${index}`, class=`${index == 0 ? 'active' : ''}`)
                  div(class='carousel-inner')
                    each screenshot, index in project.screenshots
                      div(class=`carousel-item${index == 0 ? ' active' : ''}`)
                        img(src=`./images/${screenshot}`, class='d-block custom-small-height mx-auto', alt='...')
                  a(class='carousel-control-prev', href=`#${carouselID}`, role='button', data-slide='prev')
                    span(class='carousel-control-prev-icon', aria-hidden='true')
                    span(class='sr-only') Previous
                  a(class='carousel-control-next', href=`#${carouselID}`, role='button', data-slide='next')
                    span(class='carousel-control-next-icon', aria-hidden='true')
                    span(class='sr-only') Next
          if project.websiteURL || project.githubRepo
            div(class='card-footer mt-auto')
              if project.websiteURL
                p
                  a(href=project.websiteURL, class='btn btn-success', target='_blank') Use online
              if project.githubRepo
                a(href=project.githubRepo.getURL(), class='btn btn-primary', target='_blank') View on GitHub